const loansSchema = `
  CREATE TABLE Loans (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER,
    loanType VARCHAR2(100),
    amount NUMBER,
    branch_id NUMBER,
    teller_emp_id NUMBER,
    collateral CLOB
  )
`;

const BranchSchema = `
CREATE TABLE Branch (
  branch_id VARCHAR2(10) PRIMARY KEY,
  branch_name VARCHAR2(100) NOT NULL,
  address VARCHAR2(200) NOT NULL,
  area_district VARCHAR2(100) NOT NULL,
  area_pin_code VARCHAR2(10) NOT NULL,
  manager_name VARCHAR2(100) NOT NULL,
  contact_number VARCHAR2(15) NOT NULL,
  email VARCHAR2(100),
  ifsc_code VARCHAR2(15) NOT NULL,
  timeStamp VARCHAR2(50),
  services_offered CLOB
)
`;

const AccountTypesSchema = `CREATE TABLE AccountTypes (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR2(100),
    interestRate NUMBER
);
`;

const ATMSchema = [
  `CREATE SEQUENCE atm_id_seq
   START WITH 1
   INCREMENT BY 1
   NOCACHE
   NOCYCLE`,

  `CREATE TABLE ATM (
    atm_id NUMBER PRIMARY KEY,
    branch_id VARCHAR2(50) NOT NULL,
    address VARCHAR2(200) NOT NULL,
    area_district VARCHAR2(100) NOT NULL,
    area_pin_code VARCHAR2(10) NOT NULL,
    installationDate DATE DEFAULT SYSDATE NOT NULL,status VARCHAR2(20) DEFAULT 'Active' CHECK (status IN ('Active', 'Inactive', 'Maintenance')) NOT NULL,
    cashAvailable NUMBER(15, 2) DEFAULT 0,
    cashLimit NUMBER(15, 2) NOT NULL,
    lastMaintenanceDate DATE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_branch FOREIGN KEY (branch_id) REFERENCES Branch(branch_id)
  )`,

  `CREATE OR REPLACE TRIGGER atm_id_trigger
   BEFORE INSERT ON ATM
   FOR EACH ROW
   BEGIN
     :NEW.atm_id := atm_id_seq.NEXTVAL;
     :NEW.createdAt := CURRENT_TIMESTAMP;
     :NEW.updatedAt := CURRENT_TIMESTAMP;
   END;`,

  `CREATE OR REPLACE TRIGGER atm_update_trigger
   BEFORE UPDATE ON ATM
   FOR EACH ROW
   BEGIN
     :NEW.updatedAt := CURRENT_TIMESTAMP;
   END;`,
];

export { BranchSchema, loansSchema, AccountTypesSchema, ATMSchema };
